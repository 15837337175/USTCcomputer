0x000055555555547c <+0>:	push   %r13
0x000055555555547e <+2>:	push   %r12
0x0000555555555480 <+4>:	push   %rbp
0x0000555555555481 <+5>:	push   %rbx
0x0000555555555482 <+6>:	sub    $0x58,%rsp
0x0000555555555486 <+10>:	lea    0x30(%rsp),%r12
0x000055555555548b <+15>:	mov    %r12,%rsi
0x000055555555548e <+18>:	callq  0x5555555557c5 <read_six_numbers>
#six numbers on %r12
--------------------------------------
#this is a loop
0x0000555555555493 <+23>:	mov    $0x0,%r13d
0x0000555555555499 <+29>:	jmp    0x5555555554c0 <phase_6+68>
#loop variable %r13d, 6 times
0x000055555555549b <+31>:	add    $0x1,%r13d
0x000055555555549f <+35>:	cmp    $0x6,%r13d
0x00005555555554a3 <+39>:	je     0x5555555554dd <phase_6+97>

0x00005555555554a5 <+41>:	mov    %r13d,%ebx

#inner loop, var %ebx from %r13d to 0x5
	0x00005555555554a8 <+44>:	movslq %ebx,%rax
	0x00005555555554ab <+47>:	mov    0x30(%rsp,%rax,4),%eax
	0x00005555555554af <+51>:	cmp    %eax,0x0(%rbp)
	0x00005555555554b2 <+54>:	je     0x5555555554d6 <phase_6+90>
	0x00005555555554b4 <+56>:	add    $0x1,%ebx
	0x00005555555554b7 <+59>:	cmp    $0x5,%ebx
	0x00005555555554ba <+62>:	jle    0x5555555554a8 <phase_6+44>

0x00005555555554bc <+64>:	add    $0x4,%r12
0x00005555555554c0 <+68>:	mov    %r12,%rbp
0x00005555555554c3 <+71>:	mov    (%r12),%eax
0x00005555555554c7 <+75>:	sub    $0x1,%eax
0x00005555555554ca <+78>:	cmp    $0x5,%eax
0x00005555555554cd <+81>:	jbe    0x55555555549b <phase_6+31>
#resutl: judge six input number is a sequence of 1 to 6.
--------------------------------------

0x00005555555554cf <+83>:	callq  0x55555555579f <explode_bomb>
0x00005555555554d4 <+88>:	jmp    0x55555555549b <phase_6+31>
0x00005555555554d6 <+90>:	callq  0x55555555579f <explode_bomb>
0x00005555555554db <+95>:	jmp    0x5555555554b4 <phase_6+56>

#jump to here
0x00005555555554dd <+97>:	mov    $0x0,%esi
#loop : %rsi 0x0:0x4:0x18
0x00005555555554e2 <+102>:	mov    0x30(%rsp,%rsi,1),%ecx
0x00005555555554e6 <+106>:	mov    $0x1,%eax
0x00005555555554eb <+111>:	lea    0x202dee(%rip),%rdx        # 0x5555557582e0 <node1>
0x00005555555554f2 <+118>:	cmp    $0x1,%ecx
0x00005555555554f5 <+121>:	jle    0x555555555502 <phase_6+134>
	#loop : %eax 0x1:0x1:%ecx
	0x00005555555554f7 <+123>:	mov    0x8(%rdx),%rdx
	0x00005555555554fb <+127>:	add    $0x1,%eax
	0x00005555555554fe <+130>:	cmp    %ecx,%eax
	0x0000555555555500 <+132>:	jne    0x5555555554f7 <phase_6+123>
0x0000555555555502 <+134>:	mov    %rdx,(%rsp,%rsi,2)
0x0000555555555506 <+138>:	add    $0x4,%rsi
0x000055555555550a <+142>:	cmp    $0x18,%rsi
0x000055555555550e <+146>:	jne    0x5555555554e2 <phase_6+102>
#loop end

0x0000555555555510 <+148>:	mov    (%rsp),%rbx
0x0000555555555514 <+152>:	mov    %rsp,%rax
0x0000555555555517 <+155>:	lea    0x28(%rsp),%rsi
0x000055555555551c <+160>:	mov    %rbx,%rcx

#nodes before
0x5555557582e0 <node1>:	0x000001ea	0x00000001	0x557582f0	0x00005555
0x5555557582f0 <node2>:	0x0000015d	0x00000002	0x55758300	0x00005555
0x555555758300 <node3>:	0x000002f3	0x00000003	0x55758310	0x00005555
0x555555758310 <node4>:	0x00000299	0x00000004	0x55758320	0x00005555
0x555555758320 <node5>:	0x00000188	0x00000005	0x557581f0	0x00005555
0x5555557581f0 <node6>:	0x000001b9	0x00000006	0x00000000	0x00000000

#loop:
0x000055555555551f <+163>:	mov    0x8(%rax),%rdx
0x0000555555555523 <+167>:	mov    %rdx,0x8(%rcx)
0x0000555555555527 <+171>:	add    $0x8,%rax
0x000055555555552b <+175>:	mov    %rdx,%rcx
0x000055555555552e <+178>:	cmp    %rax,%rsi
0x0000555555555531 <+181>:	jne    0x55555555551f <phase_6+163>

#nodes after
0x5555557582e0 <node1>:	0x000001ea	0x00000001	0x00000000	0x00005555
0x5555557582f0 <node2>:	0x0000015d	0x00000002	0x557581f0	0x00005555
0x555555758300 <node3>:	0x000002f3	0x00000003	0x55758320	0x00005555
0x555555758310 <node4>:	0x00000299	0x00000004	0x55758300	0x00005555
0x555555758320 <node5>:	0x00000188	0x00000005	0x557582f0	0x00005555
0x5555557581f0 <node6>:	0x000001b9	0x00000006	0x557582e0	0x00005555

0x0000555555555533 <+183>:	movq   $0x0,0x8(%rdx)
0x000055555555553b <+191>:	mov    $0x5,%ebp

#loop:
0x0000555555555540 <+196>:	jmp    0x55555555554b <phase_6+207>
0x0000555555555542 <+198>:	mov    0x8(%rbx),%rbx
0x0000555555555546 <+202>:	sub    $0x1,%ebp
0x0000555555555549 <+205>:	je     0x55555555555c <phase_6+224>
	#go to end
0x000055555555554b <+207>:	mov    0x8(%rbx),%rax
0x000055555555554f <+211>:	mov    (%rax),%eax
0x0000555555555551 <+213>:	cmp    %eax,(%rbx)
0x0000555555555553 <+215>:	jge    0x555555555542 <phase_6+198>

0x0000555555555555 <+217>:	callq  0x55555555579f <explode_bomb>
0x000055555555555a <+222>:	jmp    0x555555555542 <phase_6+198>
0x000055555555555c <+224>:	add    $0x58,%rsp
0x0000555555555560 <+228>:	pop    %rbx
0x0000555555555561 <+229>:	pop    %rbp
0x0000555555555562 <+230>:	pop    %r12
0x0000555555555564 <+232>:	pop    %r13
0x0000555555555566 <+234>:	retq   
End of assembler dump.





